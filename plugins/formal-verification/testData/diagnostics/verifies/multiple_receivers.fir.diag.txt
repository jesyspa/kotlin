/multiple_receivers.kt:(236,246): info: Generated Viper text for applyDelta:
field bf$delta: Ref

field bf$size: Ref

method f$c$ClassWithExtension$applyDelta$TF$T$ClassWithExtension$T$Int(this$dispatch: Ref,
  this$extension: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$withoutLabels: Ref
  var anon$0: Ref
  var l0$withLabels: Ref
  var anon$1: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(this$dispatch), df$rt$c$ClassWithExtension())
  inhale acc(p$c$ClassWithExtension$shared(this$dispatch), wildcard)
  inhale df$rt$isSubtype(df$rt$typeOf(this$extension), df$rt$intType())
  unfold acc(p$c$ClassWithExtension$shared(this$dispatch), wildcard)
  anon$0 := this$dispatch.bf$delta
  l0$withoutLabels := sp$plusInts(this$extension, anon$0)
  unfold acc(p$c$ClassWithExtension$shared(this$dispatch), wildcard)
  anon$1 := this$dispatch.bf$delta
  l0$withLabels := sp$plusInts(anon$1, this$extension)
  assert df$rt$intFromRef(l0$withoutLabels) ==
    df$rt$intFromRef(l0$withLabels)
  label lbl$ret$0
  inhale df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
}

/multiple_receivers.kt:(531,542): info: Generated Viper text for returnDelta:
field bf$delta: Ref

method f$c$ClassWithExtension$returnDelta$TF$T$ClassWithExtension(this$dispatch: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$intType())
{
  inhale df$rt$isSubtype(df$rt$typeOf(this$dispatch), df$rt$c$ClassWithExtension())
  inhale acc(p$c$ClassWithExtension$shared(this$dispatch), wildcard)
  unfold acc(p$c$ClassWithExtension$shared(this$dispatch), wildcard)
  ret$0 := this$dispatch.bf$delta
  goto lbl$ret$0
  label lbl$ret$0
}

/multiple_receivers.kt:(579,599): info: Generated Viper text for extensionReturnDelta:
field bf$delta: Ref

method f$extensionReturnDelta$TF$T$ClassWithExtension(this$extension: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$intType())
{
  inhale df$rt$isSubtype(df$rt$typeOf(this$extension), df$rt$c$ClassWithExtension())
  inhale acc(p$c$ClassWithExtension$shared(this$extension), wildcard)
  unfold acc(p$c$ClassWithExtension$shared(this$extension), wildcard)
  ret$0 := this$extension.bf$delta
  goto lbl$ret$0
  label lbl$ret$0
}

/multiple_receivers.kt:(712,735): info: Generated Viper text for checkClassWithExtension:
field bf$delta: Ref

field bf$size: Ref

method con$c$ClassWithExtension$T$Int(p$delta: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$c$ClassWithExtension())
  ensures acc(p$c$ClassWithExtension$shared(ret), wildcard)
  ensures acc(p$c$ClassWithExtension$unique(ret), write)
  ensures (unfolding acc(p$c$ClassWithExtension$shared(ret), wildcard) in
      df$rt$intFromRef(ret.bf$delta) == df$rt$intFromRef(p$delta))


method f$c$ClassWithExtension$applyDelta$TF$T$ClassWithExtension$T$Int(this$dispatch: Ref,
  this$extension: Ref)
  returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$unitType())


method f$c$ClassWithExtension$returnDelta$TF$T$ClassWithExtension(this$dispatch: Ref)
  returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$intType())


method f$checkClassWithExtension$TF$() returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var anon$3: Ref
  var anon$4: Ref
  var ret$1: Ref
  var anon$0: Ref
  var anon$5: Ref
  var anon$6: Ref
  var ret$2: Ref
  var anon$1: Ref
  var anon$7: Ref
  var anon$8: Ref
  var anon$9: Ref
  var anon$10: Ref
  var ret$3: Ref
  var anon$2: Ref
  var anon$11: Ref
  anon$5 := con$c$ClassWithExtension$T$Int(df$rt$intToRef(42))
  anon$0 := anon$5
  inhale df$rt$isSubtype(df$rt$typeOf(anon$0), df$rt$nullable(df$rt$anyType()))
  inhale df$rt$isSubtype(df$rt$typeOf(anon$0), df$rt$c$ClassWithExtension())
  inhale acc(p$c$ClassWithExtension$shared(anon$0), wildcard)
  anon$1 := anon$0
  anon$7 := f$c$ClassWithExtension$applyDelta$TF$T$ClassWithExtension$T$Int(anon$1,
    df$rt$intToRef(42))
  anon$8 := f$c$ClassWithExtension$returnDelta$TF$T$ClassWithExtension(anon$1)
  anon$9 := f$extensionReturnDelta$TF$T$ClassWithExtension(anon$1)
  anon$2 := df$rt$intToRef(42)
  unfold acc(p$c$ClassWithExtension$shared(anon$1), wildcard)
  anon$11 := anon$1.bf$delta
  ret$3 := sp$plusInts(anon$2, anon$11)
  goto lbl$ret$3
  label lbl$ret$3
  anon$10 := ret$3
  assert df$rt$intFromRef(anon$10) == 84
  label lbl$ret$2
  inhale df$rt$isSubtype(df$rt$typeOf(ret$2), df$rt$unitType())
  anon$6 := ret$2
  ret$1 := anon$6
  inhale df$rt$isSubtype(df$rt$typeOf(ret$1), df$rt$nullable(df$rt$anyType()))
  goto lbl$ret$1
  label lbl$ret$1
  anon$4 := ret$1
  anon$3 := anon$4
  inhale df$rt$isSubtype(df$rt$typeOf(anon$3), df$rt$unitType())
  label lbl$ret$0
  inhale df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
}

method f$extensionReturnDelta$TF$T$ClassWithExtension(this$extension: Ref)
  returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$intType())
