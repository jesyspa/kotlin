/sum_of_1_to_n.kt:(64,91): info: Generated Viper text for recursiveSumOfIntegersUpToN:
method f$recursiveSumOfIntegersUpToN$TF$T$Int(p$n: Ref)
  returns (ret$0: Ref)
  requires df$rt$intFromRef(p$n) >= 0
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$intType())
  ensures df$rt$intFromRef(ret$0) ==
    df$rt$intFromRef(p$n) * (df$rt$intFromRef(p$n) + 1) / 2
{
  inhale df$rt$isSubtype(df$rt$typeOf(p$n), df$rt$intType())
  if (df$rt$intFromRef(p$n) == 0) {
    ret$0 := df$rt$intToRef(0)
    goto lbl$ret$0
  } else {
    var anon$0: Ref
    anon$0 := f$recursiveSumOfIntegersUpToN$TF$T$Int(sp$minusInts(p$n, df$rt$intToRef(1)))
    ret$0 := sp$plusInts(p$n, anon$0)
    goto lbl$ret$0
  }
  label lbl$ret$0
}

/sum_of_1_to_n.kt:(296,314): info: Generated Viper text for sumOfIntegersUpToN:
method f$sumOfIntegersUpToN$TF$T$Int(p$n: Ref) returns (ret$0: Ref)
  requires df$rt$intFromRef(p$n) >= 0
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$intType())
  ensures df$rt$intFromRef(ret$0) ==
    df$rt$intFromRef(p$n) * (df$rt$intFromRef(p$n) + 1) / 2
{
  var l0$sum: Ref
  var l0$i: Ref
  var anon$0: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(p$n), df$rt$intType())
  l0$sum := df$rt$intToRef(0)
  l0$i := df$rt$intToRef(0)
  label lbl$continue$0
    invariant df$rt$isSubtype(df$rt$typeOf(l0$sum), df$rt$intType())
    invariant df$rt$isSubtype(df$rt$typeOf(l0$i), df$rt$intType())
    invariant df$rt$isSubtype(df$rt$typeOf(p$n), df$rt$intType())
    invariant df$rt$intFromRef(l0$i) <= df$rt$intFromRef(p$n)
    invariant df$rt$intFromRef(l0$sum) ==
      df$rt$intFromRef(l0$i) * (df$rt$intFromRef(l0$i) + 1) / 2
  anon$0 := sp$ltInts(l0$i, p$n)
  if (df$rt$boolFromRef(anon$0)) {
    l0$sum := sp$plusInts(l0$sum, sp$plusInts(l0$i, df$rt$intToRef(1)))
    l0$i := sp$plusInts(l0$i, df$rt$intToRef(1))
    goto lbl$continue$0
  }
  label lbl$break$0
    invariant df$rt$isSubtype(df$rt$typeOf(l0$sum), df$rt$intType())
    invariant df$rt$isSubtype(df$rt$typeOf(l0$i), df$rt$intType())
    invariant df$rt$isSubtype(df$rt$typeOf(p$n), df$rt$intType())
    invariant df$rt$intFromRef(l0$i) <= df$rt$intFromRef(p$n)
    invariant df$rt$intFromRef(l0$sum) ==
      df$rt$intFromRef(l0$i) * (df$rt$intFromRef(l0$i) + 1) / 2
  ret$0 := l0$sum
  goto lbl$ret$0
  label lbl$ret$0
}
