/as_operator.kt:(57,63): info: Generated Viper text for testAs:
method f$g$testAs$TF$T$class_c$g$Foo(p$foo: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$T$class_c$g$Bar())
  ensures acc(T$class_c$g$Bar(ret$0), wildcard)
{
  inhale df$rt$isSubtype(df$rt$typeOf(p$foo), df$rt$T$class_c$g$Foo())
  inhale acc(T$class_c$g$Foo(p$foo), wildcard)
  ret$0 := p$foo
  inhale df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$T$class_c$g$Bar())
  inhale acc(T$class_c$g$Bar(ret$0), wildcard)
  goto lbl$ret$0
  label lbl$ret$0
}

/as_operator.kt:(97,111): info: Generated Viper text for testNullableAs:
method f$g$testNullableAs$TF$class_c$g$Foo(p$foo: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$nullable(df$rt$T$class_c$g$Bar()))
  ensures ret$0 != df$rt$nullValue() ==>
    acc(T$class_c$g$Bar(ret$0), wildcard)
{
  inhale df$rt$isSubtype(df$rt$typeOf(p$foo), df$rt$nullable(df$rt$T$class_c$g$Foo()))
  inhale p$foo != df$rt$nullValue() ==>
    acc(T$class_c$g$Foo(p$foo), wildcard)
  ret$0 := p$foo
  inhale df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$nullable(df$rt$T$class_c$g$Bar()))
  inhale ret$0 != df$rt$nullValue() ==>
    acc(T$class_c$g$Bar(ret$0), wildcard)
  goto lbl$ret$0
  label lbl$ret$0
}

/as_operator.kt:(148,158): info: Generated Viper text for testSafeAs:
method f$g$testSafeAs$TF$T$class_c$g$Foo(p$foo: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$nullable(df$rt$T$class_c$g$Bar()))
  ensures ret$0 != df$rt$nullValue() ==>
    acc(T$class_c$g$Bar(ret$0), wildcard)
{
  inhale df$rt$isSubtype(df$rt$typeOf(p$foo), df$rt$T$class_c$g$Foo())
  inhale acc(T$class_c$g$Foo(p$foo), wildcard)
  if (df$rt$isSubtype(df$rt$typeOf(p$foo), df$rt$T$class_c$g$Bar())) {
    ret$0 := p$foo
  } else {
    ret$0 := df$rt$nullValue()}
  inhale df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$nullable(df$rt$T$class_c$g$Bar()))
  inhale ret$0 != df$rt$nullValue() ==>
    acc(T$class_c$g$Bar(ret$0), wildcard)
  goto lbl$ret$0
  label lbl$ret$0
}

/as_operator.kt:(194,212): info: Generated Viper text for testNullableSafeAs:
method f$g$testNullableSafeAs$TF$class_c$g$Foo(p$foo: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$nullable(df$rt$T$class_c$g$Bar()))
  ensures ret$0 != df$rt$nullValue() ==>
    acc(T$class_c$g$Bar(ret$0), wildcard)
{
  inhale df$rt$isSubtype(df$rt$typeOf(p$foo), df$rt$nullable(df$rt$T$class_c$g$Foo()))
  inhale p$foo != df$rt$nullValue() ==>
    acc(T$class_c$g$Foo(p$foo), wildcard)
  if (df$rt$isSubtype(df$rt$typeOf(p$foo), df$rt$T$class_c$g$Bar())) {
    ret$0 := p$foo
  } else {
    ret$0 := df$rt$nullValue()}
  inhale df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$nullable(df$rt$T$class_c$g$Bar()))
  inhale ret$0 != df$rt$nullValue() ==>
    acc(T$class_c$g$Bar(ret$0), wildcard)
  goto lbl$ret$0
  label lbl$ret$0
}
