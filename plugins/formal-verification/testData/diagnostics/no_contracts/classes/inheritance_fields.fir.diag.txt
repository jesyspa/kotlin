/inheritance_fields.kt:(227,234): info: Generated Viper text for createB:
field bf$public$fieldNotOverride: Ref

method con$c$B$T$class_c$g$FieldB(p$fieldOverride: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$class_c$g$B())
  ensures acc(T$class_c$g$B(ret), wildcard)
  ensures acc(U$T$class_c$g$B(ret), write)


method con$c$FieldB$() returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$class_c$g$FieldB())
  ensures acc(T$class_c$g$FieldB(ret), wildcard)
  ensures acc(U$T$class_c$g$FieldB(ret), write)


method f$g$createB$TF$() returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$fieldB: Ref
  var l0$b: Ref
  var l0$fieldOverride: Ref
  var anon$0: Ref
  var l0$fieldNotOverride: Ref
  ret$0 := df$rt$unitValue()
  l0$fieldB := con$c$FieldB$()
  l0$b := con$c$B$T$class_c$g$FieldB(l0$fieldB)
  anon$0 := pg$public$fieldOverride(l0$b)
  l0$fieldOverride := anon$0
  inhale df$rt$isSubtype(df$rt$typeOf(l0$fieldOverride), df$rt$T$class_c$g$FieldB())
  inhale acc(T$class_c$g$FieldB(l0$fieldOverride), wildcard)
  unfold acc(T$class_c$g$B(l0$b), wildcard)
  unfold acc(T$class_c$g$A(l0$b), wildcard)
  l0$fieldNotOverride := l0$b.bf$public$fieldNotOverride
  label lbl$ret$0
}

method pg$public$fieldOverride(this: Ref) returns (ret: Ref)


/inheritance_fields.kt:(699,715): info: Generated Viper text for createBFsAndNoBF:
field bf$public$x: Ref

method con$c$FirstBackingFieldClass$() returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$class_c$g$FirstBackingFieldClass())
  ensures acc(T$class_c$g$FirstBackingFieldClass(ret), wildcard)
  ensures acc(U$T$class_c$g$FirstBackingFieldClass(ret), write)


method con$c$NoBackingFieldClass$() returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$class_c$g$NoBackingFieldClass())
  ensures acc(T$class_c$g$NoBackingFieldClass(ret), wildcard)
  ensures acc(U$T$class_c$g$NoBackingFieldClass(ret), write)


method con$c$SecondBackingFieldClass$T$Int(p$x: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$class_c$g$SecondBackingFieldClass())
  ensures acc(T$class_c$g$SecondBackingFieldClass(ret), wildcard)
  ensures acc(U$T$class_c$g$SecondBackingFieldClass(ret), write)
  ensures (unfolding acc(T$class_c$g$SecondBackingFieldClass(ret), wildcard) in
      df$rt$intFromRef(ret.bf$public$x) == df$rt$intFromRef(p$x))


method f$g$createBFsAndNoBF$TF$() returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$fbf: Ref
  var l0$fbfx: Ref
  var anon$0: Ref
  var l0$nbf: Ref
  var l0$nbfx: Ref
  var anon$1: Ref
  var l0$sbf: Ref
  var l0$sbfx: Ref
  ret$0 := df$rt$unitValue()
  l0$fbf := con$c$FirstBackingFieldClass$()
  anon$0 := pg$public$x(l0$fbf)
  l0$fbfx := anon$0
  inhale df$rt$isSubtype(df$rt$typeOf(l0$fbfx), df$rt$intType())
  l0$nbf := con$c$NoBackingFieldClass$()
  anon$1 := pg$public$x(l0$nbf)
  l0$nbfx := anon$1
  inhale df$rt$isSubtype(df$rt$typeOf(l0$nbfx), df$rt$intType())
  l0$sbf := con$c$SecondBackingFieldClass$T$Int(df$rt$intToRef(10))
  unfold acc(T$class_c$g$SecondBackingFieldClass(l0$sbf), wildcard)
  l0$sbfx := l0$sbf.bf$public$x
  label lbl$ret$0
}

method pg$public$x(this: Ref) returns (ret: Ref)


/inheritance_fields.kt:(1038,1045): info: Generated Viper text for createY:
field bf$public$a: Ref

method con$c$Y$T$Int(p$a: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$class_c$g$Y())
  ensures acc(T$class_c$g$Y(ret), wildcard)
  ensures acc(U$T$class_c$g$Y(ret), write)


method f$g$createY$TF$() returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$y: Ref
  var l0$ya: Ref
  ret$0 := df$rt$unitValue()
  l0$y := con$c$Y$T$Int(df$rt$intToRef(10))
  unfold acc(T$class_c$g$Y(l0$y), wildcard)
  unfold acc(T$class_c$g$X(l0$y), wildcard)
  l0$ya := l0$y.bf$public$a
  label lbl$ret$0
}
