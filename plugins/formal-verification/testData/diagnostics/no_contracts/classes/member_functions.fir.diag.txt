/member_functions.kt:(51,60): info: Generated Viper text for memberFun:
field bf$public$x: Ref

method f$c$Foo$memberFun$TF$T$class_c$g$Foo(this: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$intType())
{
  inhale df$rt$isSubtype(df$rt$typeOf(this), df$rt$T$class_c$g$Foo())
  inhale acc(T$class_c$g$Foo(this), wildcard)
  unfold acc(T$class_c$g$Foo(this), wildcard)
  ret$0 := this.bf$public$x
  goto lbl$ret$0
  label lbl$ret$0
}

/member_functions.kt:(102,115): info: Generated Viper text for callMemberFun:
field bf$public$x: Ref

method f$c$Foo$callMemberFun$TF$T$class_c$g$Foo(this: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var anon$0: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(this), df$rt$T$class_c$g$Foo())
  inhale acc(T$class_c$g$Foo(this), wildcard)
  ret$0 := df$rt$unitValue()
  anon$0 := f$c$Foo$memberFun$TF$T$class_c$g$Foo(this)
  label lbl$ret$0
}

method f$c$Foo$memberFun$TF$T$class_c$g$Foo(this: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$intType())


/member_functions.kt:(155,166): info: Generated Viper text for siblingCall:
field bf$public$x: Ref

method f$c$Foo$memberFun$TF$T$class_c$g$Foo(this: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$intType())


method f$c$Foo$siblingCall$TF$T$class_c$g$Foo$T$class_c$g$Foo(this: Ref, p$other: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var anon$0: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(this), df$rt$T$class_c$g$Foo())
  inhale acc(T$class_c$g$Foo(this), wildcard)
  inhale df$rt$isSubtype(df$rt$typeOf(p$other), df$rt$T$class_c$g$Foo())
  inhale acc(T$class_c$g$Foo(p$other), wildcard)
  ret$0 := df$rt$unitValue()
  anon$0 := f$c$Foo$memberFun$TF$T$class_c$g$Foo(p$other)
  label lbl$ret$0
}

/member_functions.kt:(220,238): info: Generated Viper text for outerMemberFunCall:
field bf$public$x: Ref

method f$c$Foo$memberFun$TF$T$class_c$g$Foo(this: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$intType())


method f$g$outerMemberFunCall$TF$T$class_c$g$Foo(p$f: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var anon$0: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(p$f), df$rt$T$class_c$g$Foo())
  inhale acc(T$class_c$g$Foo(p$f), wildcard)
  ret$0 := df$rt$unitValue()
  anon$0 := f$c$Foo$memberFun$TF$T$class_c$g$Foo(p$f)
  label lbl$ret$0
}
