/property_getters.kt:(102,129): info: Generated Viper text for testPrimitivePropertyGetter:
method f$testPrimitivePropertyGetter$TF$T$c$PrimitiveProperty(p$pp: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$intType())
{
  inhale df$rt$isSubtype(df$rt$typeOf(p$pp), df$rt$T$c$PrimitiveProperty())
  inhale acc(p$c$PrimitiveProperty$shared(p$pp), wildcard)
  ret$0 := pg$c$PrimitiveProperty$public$nProp(p$pp)
  goto lbl$ret$0
  label lbl$ret$0
}

method pg$c$PrimitiveProperty$public$nProp(this: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$intType())


/property_getters.kt:(286,313): info: Generated Viper text for testReferencePropertyGetter:
method f$testReferencePropertyGetter$TF$T$c$ReferenceProperty(p$rp: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$pp: Ref
  var l0$ppn: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(p$rp), df$rt$T$c$ReferenceProperty())
  inhale acc(p$c$ReferenceProperty$shared(p$rp), wildcard)
  ret$0 := df$rt$unitValue()
  l0$pp := pg$c$ReferenceProperty$public$rProp(p$rp)
  l0$ppn := pg$c$PrimitiveProperty$public$nProp(l0$pp)
  label lbl$ret$0
}

method pg$c$PrimitiveProperty$public$nProp(this: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$intType())


method pg$c$ReferenceProperty$public$rProp(this: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$c$PrimitiveProperty())
  ensures acc(p$c$PrimitiveProperty$shared(ret), wildcard)


/property_getters.kt:(391,418): info: Generated Viper text for testCascadingPropertyGetter:
method f$testCascadingPropertyGetter$TF$T$c$ReferenceProperty(p$rp: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$ppn: Ref
  var anon$0: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(p$rp), df$rt$T$c$ReferenceProperty())
  inhale acc(p$c$ReferenceProperty$shared(p$rp), wildcard)
  ret$0 := df$rt$unitValue()
  anon$0 := pg$c$ReferenceProperty$public$rProp(p$rp)
  l0$ppn := pg$c$PrimitiveProperty$public$nProp(anon$0)
  label lbl$ret$0
}

method pg$c$PrimitiveProperty$public$nProp(this: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$intType())


method pg$c$ReferenceProperty$public$rProp(this: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$c$PrimitiveProperty())
  ensures acc(p$c$PrimitiveProperty$shared(ret), wildcard)

