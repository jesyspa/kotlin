FILE: loop.kt
    public final fun while_loop(b: R|kotlin/Boolean|): R|kotlin/Boolean| {
        while(R|<local>/b|) {
            lval a: R|kotlin/Int| = Int(1)
            lval c: R|kotlin/Int| = Int(2)
        }

        ^while_loop Boolean(false)
    }
    public final fun while_function_condition(): R|kotlin/Unit| {
        while(R|/while_loop|(Boolean(true))) {
        }

    }
    public final fun while_break(b: R|kotlin/Boolean|): R|kotlin/Int| {
        lvar i: R|kotlin/Int| = Int(0)
        while(R|<local>/b|) {
            R|<local>/i| = Int(1)
            break@@@[R|<local>/b|]
        }

        ^while_break R|<local>/i|
    }
    public final fun while_continue(b: R|kotlin/Boolean|): R|kotlin/Int| {
        lvar i: R|kotlin/Int| = Int(0)
        while(R|<local>/b|) {
            R|<local>/i| = Int(1)
            continue@@@[R|<local>/b|]
        }

        ^while_continue R|<local>/i|
    }
    public final fun while_nested(b: R|kotlin/Boolean|): R|kotlin/Unit| {
        while(R|<local>/b|) {
            while(R|<local>/b|) {
                break@@@[R|<local>/b|]
            }

            continue@@@[R|<local>/b|]
            while(R|<local>/b|) {
                continue@@@[R|<local>/b|]
            }

            break@@@[R|<local>/b|]
        }

    }
