FILE: inlining.kt
    public final inline fun invoke(f: R|(kotlin/Int) -> kotlin/Int|): R|kotlin/Int| {
        lval x: R|kotlin/Int| = R|<local>/f|.R|SubstitutionOverride<kotlin/Function1.invoke: R|kotlin/Int|>|(Int(0))
        ^invoke R|<local>/f|.R|SubstitutionOverride<kotlin/Function1.invoke: R|kotlin/Int|>|(R|<local>/x|)
    }
    @R|kotlin/Suppress|(names = vararg(String(WRONG_INVOCATION_KIND), String(LEAKED_IN_PLACE_LAMBDA))) @R|kotlin/OptIn|(markerClass = vararg(<getClass>(Q|kotlin/contracts/ExperimentalContracts|))) public final fun foo(g: R|(kotlin/Int) -> kotlin/Int|): R|kotlin/Int|
        [R|Contract description]
         <
            CallsInPlace(g, AT_LEAST_ONCE)
        >
     {
         {
            R|kotlin/contracts/contract|(<L> = contract@fun R|kotlin/contracts/ContractBuilder|.<anonymous>(): R|kotlin/Unit| <inline=Inline, kind=UNKNOWN>  {
                this@R|special/anonymous|.R|kotlin/contracts/ContractBuilder.callsInPlace|<R|kotlin/Int|>(R|<local>/g|, R|kotlin/contracts/InvocationKind.AT_LEAST_ONCE|)
            }
            )
        }

        lval z: R|kotlin/Int| = R|/invoke|(R|<local>/g|)
        ^foo R|/invoke|(R|<local>/g|)
    }
