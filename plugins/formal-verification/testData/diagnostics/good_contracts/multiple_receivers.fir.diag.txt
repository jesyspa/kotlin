/multiple_receivers.kt:(247,257): info: Generated Viper text for applyDelta:
field bf$delta: Ref

method f$c$ClassWithExtension$applyDelta$TF$T$c$ClassWithExtension(this: Ref)
  returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$intType())
{
  var anon$0: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(this), df$rt$T$c$ClassWithExtension())
  inhale acc(p$c$ClassWithExtension$shared(this), wildcard)
  unfold acc(p$c$ClassWithExtension$shared(this), wildcard)
  anon$0 := this.bf$delta
  ret$0 := sp$plusInts(this, anon$0)
  goto lbl$ret$0
  label lbl$ret$0
}

/multiple_receivers.kt:(379,402): info: Generated Viper text for checkClassWithExtension:
field bf$delta: Ref

method con$c$ClassWithExtension$T$Int(p$delta: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$c$ClassWithExtension())
  ensures acc(p$c$ClassWithExtension$shared(ret), wildcard)
  ensures acc(p$c$ClassWithExtension$unique(ret), write)
  ensures (unfolding acc(p$c$ClassWithExtension$shared(ret), wildcard) in
      df$rt$intFromRef(ret.bf$delta) == df$rt$intFromRef(p$delta))


method f$c$ClassWithExtension$applyDelta$TF$T$c$ClassWithExtension(this: Ref)
  returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$intType())


method f$checkClassWithExtension$TF$() returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var ret$1: Ref
  var anon$0: Ref
  var anon$1: Ref
  var ret$2: Ref
  ret$0 := df$rt$unitValue()
  anon$0 := con$c$ClassWithExtension$T$Int(df$rt$intToRef(42))
  ret$2 := f$c$ClassWithExtension$applyDelta$TF$T$c$ClassWithExtension(anon$0)
  goto lbl$ret$2
  label lbl$ret$2
  anon$1 := ret$2
  ret$1 := anon$1
  goto lbl$ret$1
  label lbl$ret$1
  label lbl$ret$0
}
